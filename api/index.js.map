{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.jsx", "/Users/whien/Workspace/krypto-camp/week3/MyExchange/app/root.jsx", "/Users/whien/Workspace/krypto-camp/week3/MyExchange/app/routes/index.jsx", "../app/components/AppBar.jsx", "../app/components/ConnectorButton.jsx", "../app/components/UIBlock.jsx", "../app/abi/MyToken.js", "../app/abi/MyExchange.js", "../app/utils/contract/helper.js", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\nimport { Provider } from 'wagmi'\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  let markup = renderToString(\n    <Provider>\n      <RemixServer context={remixContext} url={request.url} />\n    </Provider>\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import { json } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from '@remix-run/react'\n\nexport const meta = () => ({\n  charset: 'utf-8',\n  title: ' MyTokenExchange',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const links = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css',\n    },\n    {\n      rel: 'stylesheet',\n      href: 'https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css',\n    },\n  ]\n}\n\nexport async function loader() {\n  return json({\n    ENV: {\n      CONTRACT_ADDRESS_ERC20: process.env.CONTRACT_ADDRESS_ERC20,\n      CONTRACT_ADDRESS_EXCHANGE: process.env.CONTRACT_ADDRESS_EXCHANGE,\n      INFURA_ID: process.env.INFURA_ID,\n    },\n  })\n}\n\nexport default function App() {\n  const data = useLoaderData()\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(data.ENV)}`,\n          }}\n        />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import { useState } from 'react'\nimport AppBar from '../components/AppBar'\nimport UIBlock from '../components/UIBlock'\n\nexport default function Index() {\n  const [router, setRouter] = useState('/addLiquidity')\n  /**\n   * @dev workaround for avoid server side render.\n   */\n  const [mounted, setMounted] = React.useState(false)\n  React.useEffect(() => {\n    setMounted(true)\n  }, [])\n  if (!mounted) return null\n\n  return (\n    <div>\n      <AppBar setRouter={setRouter} />\n      <UIBlock router={router} />\n    </div>\n  )\n}\n", "import { useAccount } from 'wagmi'\nimport ConnectorButton from '../components/ConnectorButton.jsx'\n\nexport default function AppBar({ setRouter }) {\n  const [{ data: accountData }, disconnect] = useAccount()\n  return (\n    <div\n      style={{\n        backgroundColor: '#ccc',\n        padding: 14,\n        height: 60,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          gap: 20,\n        }}\n      >\n        <div style={{ cursor: 'pointer' }}>MyToken Exchange</div>\n        <div style={{ cursor: 'pointer' }} onClick={() => setRouter('/swap')}>\n          \u514C\u63DB\u4EE3\u5E63\n        </div>\n        <div\n          style={{ cursor: 'pointer' }}\n          onClick={() => setRouter('/addLiquidity')}\n        >\n          \u6DFB\u52A0\u6D41\u52D5\u6027\n        </div>\n        <div\n          style={{ cursor: 'pointer' }}\n          onClick={() => setRouter('/removeLiquidity')}\n        >\n          \u6D41\u52D5\u6027\u7BA1\u7406\n        </div>\n      </div>\n      <div>\n        {accountData?.address ? (\n          <div\n            style={{ cursor: 'pointer' }}\n            key={accountData.address}\n            onClick={disconnect}\n          >\n            {accountData.ens ? accountData.ens.name : accountData.address}\n          </div>\n        ) : (\n          <ConnectorButton />\n        )}\n      </div>\n    </div>\n  )\n}\n", "import { useConnect } from 'wagmi'\n\nexport default function ConnectorButton({ customText }) {\n  const [{ data: connectData }, connect] = useConnect({ fetchEns: true })\n\n  return connectData.connectors.map((connector) => (\n    <button\n      className=\"btn btn-primary btn-sm\"\n      key={connector.id}\n      onClick={() => connect(connector)}\n    >\n      {customText || '\u9023\u63A5\u9322\u5305'}\n    </button>\n  ))\n}\n", "import { useState, useEffect } from 'react'\nimport {\n  useAccount,\n  useProvider,\n  useWaitForTransaction,\n  useBalance,\n} from 'wagmi'\nimport { utils } from 'ethers'\n\nimport MyToken from '../abi/MyToken'\nimport MyExchange from '../abi/MyExchange'\nimport { readContract, writeContract } from '../utils/contract/helper'\n\nimport ConnectorButton from './ConnectorButton'\n\nconst formatEther = (amount) => utils.formatEther(amount)\nconst parseEther = (amount) => utils.parseEther(amount)\nconst formatRouterName = (router) => {\n  switch (router) {\n    case '/swap':\n      return '\u514C\u63DB\u4EE3\u5E63'\n    case '/addLiquidity':\n      return '\u6DFB\u52A0\u6D41\u52D5\u6027'\n    case '/removeLiquidity':\n      return '\u79FB\u9664\u6D41\u52D5\u6027'\n  }\n}\nconst formatBtnActionName = (router) => {\n  switch (router) {\n    case '/swap':\n      return '\u514C\u63DB\u4EE3\u5E63'\n    case '/addLiquidity':\n      return '\u6DFB\u52A0\u6D41\u52D5\u6027'\n    case '/removeLiquidity':\n      return '\u79FB\u9664\u6D41\u52D5\u6027'\n  }\n}\n\nexport default function UIBlock({ router }) {\n  const provider = useProvider()\n  const [inputETH, setInputETH] = useState(0)\n  const [inputToken, setInputToken] = useState(0)\n  const [{ data: accountData }] = useAccount()\n  const [{ data: ethBalance }] = useBalance({\n    addressOrName: accountData?.address,\n  })\n\n  const [{ data: balance }, readBalance] = readContract({\n    contract: window.ENV.CONTRACT_ADDRESS_ERC20,\n    method: 'balanceOf',\n    provider,\n    abi: MyToken,\n    args: accountData?.address,\n  })\n\n  const [{ data: LPbalance }, readLPBalance] = readContract({\n    contract: window.ENV.CONTRACT_ADDRESS_EXCHANGE,\n    method: 'balanceOf',\n    provider,\n    abi: MyExchange,\n    args: accountData?.address,\n  })\n\n  const [{ data: balanceOfExchange }, readBalanceOfExchange] = readContract({\n    contract: window.ENV.CONTRACT_ADDRESS_ERC20,\n    method: 'balanceOf',\n    provider,\n    abi: MyToken,\n    args: window.ENV.CONTRACT_ADDRESS_EXCHANGE,\n  })\n\n  const [{ data: symbol }] = readContract({\n    contract: window.ENV.CONTRACT_ADDRESS_ERC20,\n    method: 'symbol',\n    provider,\n    abi: MyToken,\n  })\n\n  const [{ data: allowence }, readAllowence] = readContract({\n    contract: window.ENV.CONTRACT_ADDRESS_ERC20,\n    method: 'allowance',\n    provider,\n    abi: MyToken,\n    args: [accountData?.address, window.ENV.CONTRACT_ADDRESS_EXCHANGE],\n  })\n\n  /**\n   * ERC20\n   */\n\n  const [{ data: transactionResponse }, approveToken] = writeContract({\n    contract: window.ENV.CONTRACT_ADDRESS_ERC20,\n    method: 'approve',\n    provider,\n    abi: MyToken,\n    args: [\n      window.ENV.CONTRACT_ADDRESS_EXCHANGE,\n      inputToken ? parseEther(inputToken.toString()) : 0,\n    ],\n  })\n\n  /**\n   * Exchange\n   */\n\n  const [{ data: addLiquidityTxResponse }, addLiquidity] = writeContract({\n    contract: window.ENV.CONTRACT_ADDRESS_EXCHANGE,\n    method: 'addLiquidity',\n    provider,\n    abi: MyExchange,\n    args: [\n      inputETH ? parseEther(inputETH.toString()) : 0,\n      inputToken ? parseEther(inputToken.toString()) : 0,\n    ],\n    overrides: {\n      value: inputETH ? parseEther(inputETH.toString()) : 0,\n    },\n  })\n\n  const [{ data: removeLiquidityTxResponse }, removeLiquidity] = writeContract({\n    contract: window.ENV.CONTRACT_ADDRESS_EXCHANGE,\n    method: 'removeLiquidity',\n    provider,\n    abi: MyExchange,\n    args: [LPbalance ? LPbalance : 0, 1, 1],\n  })\n\n  const [{ data: ethToTokenTransferInputTxResponse }, ethToTokenTransferInput] =\n    writeContract({\n      contract: window.ENV.CONTRACT_ADDRESS_EXCHANGE,\n      method: 'ethToTokenTransferInput',\n      provider,\n      abi: MyExchange,\n      args: [0],\n      overrides: {\n        value: inputETH ? parseEther(inputETH.toString()) : 0,\n      },\n    })\n\n  const [{ loading: addLiquidityTxLoading }] = useWaitForTransaction({\n    hash: addLiquidityTxResponse?.hash,\n  })\n\n  const [{ loading: removeLiquidityTxLoading }] = useWaitForTransaction({\n    hash: removeLiquidityTxResponse?.hash,\n  })\n\n  const [{ loading: ethToTokenTransferInputTxLoading }] = useWaitForTransaction(\n    {\n      hash: ethToTokenTransferInputTxResponse?.hash,\n    }\n  )\n\n  const [{ data: transactionData, loading: transactionLoading }] =\n    useWaitForTransaction({\n      hash: transactionResponse?.hash,\n    })\n\n  useEffect(() => {\n    if (transactionLoading) return\n    readBalance()\n    readBalanceOfExchange()\n    readAllowence()\n    readLPBalance()\n  }, [accountData?.address, transactionLoading])\n\n  return (\n    <div\n      style={{\n        padding: 14,\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <div\n        style={{\n          padding: 24,\n        }}\n      >\n        <div style={{ textAlign: 'center' }}>{formatRouterName(router)}</div>\n        <br />\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          {router === '/addLiquidity' ? (\n            <div>\n              <div className=\"input-group mb-3\">\n                <span className=\"input-group-text\" id=\"eth\">\n                  <img\n                    width=\"12\"\n                    src=\"https://cryptologos.cc/logos/ethereum-eth-logo.svg?v=022\"\n                  />\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  placeholder=\"\u6578\u91CF\"\n                  onChange={(e) => setInputETH(Number(e.target.value))}\n                />\n                <span className=\"input-group-text\">\n                  {ethBalance\n                    ? Number(formatEther(ethBalance.value)).toFixed(3)\n                    : '0.0'}\n                </span>\n              </div>\n              <div className=\"input-group mb-3\">\n                <span className=\"input-group-text\" id=\"token\">\n                  {symbol}\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  placeholder=\"\u6578\u91CF\"\n                  onChange={(e) => setInputToken(Number(e.target.value))}\n                />\n                <span className=\"input-group-text\">\n                  {balance ? formatEther(balance) : '0.0'}\n                </span>\n                <span className=\"input-group-text\">\n                  {allowence ? formatEther(allowence) : '0.0'}\n                </span>\n                <span className=\"input-group-text\">\n                  {LPbalance ? formatEther(LPbalance) : '0.0'}\n                </span>\n              </div>\n            </div>\n          ) : null}\n\n          {router === '/removeLiquidity' ? (\n            <div>\n              <div>\n                \u7E3D\u63D0\u4F9B\u6D41\u52D5\u6027\u4EFD\u984D {LPbalance ? formatEther(LPbalance) : '0.0'}\n              </div>\n              <br />\n            </div>\n          ) : null}\n\n          {router === '/swap' ? (\n            <div>\n              <div>\n                \u4EA4\u6613\u6240{symbol} \u9918\u984D{' '}\n                {balanceOfExchange ? formatEther(balanceOfExchange) : 0.0}\n              </div>\n              <div className=\"input-group mb-3\">\n                <span className=\"input-group-text\" id=\"eth\">\n                  <img\n                    width=\"12\"\n                    src=\"https://cryptologos.cc/logos/ethereum-eth-logo.svg?v=022\"\n                  />\n                </span>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  placeholder=\"\u6578\u91CF\"\n                  onChange={(e) => setInputETH(Number(e.target.value))}\n                />\n                <span className=\"input-group-text\">\n                  {ethBalance\n                    ? Number(formatEther(ethBalance.value)).toFixed(3)\n                    : '0.0'}\n                </span>\n              </div>\n            </div>\n          ) : null}\n          {accountData ? (\n            allowence ? (\n              Number(formatEther(allowence)) === 0 &&\n              router === '/addLiquidity' ? (\n                <button\n                  className=\"btn btn-dark btn-sm\"\n                  disabled={\n                    inputToken === 0 ||\n                    inputToken > formatEther(balance) ||\n                    transactionLoading\n                  }\n                  onClick={() => approveToken()}\n                >\n                  {transactionLoading ? `\u6388\u6B0A\u4E2D...` : `\u6388\u6B0A ${symbol} \u4EE3\u5E63`}\n                </button>\n              ) : (\n                (router === '/addLiquidity' && (\n                  <button\n                    className=\"btn btn-dark btn-sm\"\n                    disabled={\n                      inputETH === 0 ||\n                      inputETH > formatEther(ethBalance.value) ||\n                      inputToken === 0 ||\n                      inputToken > formatEther(balance) ||\n                      addLiquidityTxLoading\n                    }\n                    onClick={() => {\n                      addLiquidity()\n                    }}\n                  >\n                    {formatBtnActionName(router)}\n                  </button>\n                )) ||\n                (router === '/removeLiquidity' && (\n                  <button\n                    className=\"btn btn-dark btn-sm\"\n                    disabled={\n                      Number(formatEther(LPbalance)) === 0 ||\n                      removeLiquidityTxLoading\n                    }\n                    onClick={() => {\n                      removeLiquidity()\n                    }}\n                  >\n                    {formatBtnActionName(router)}\n                  </button>\n                )) ||\n                (router === '/swap' && (\n                  <button\n                    className=\"btn btn-dark btn-sm\"\n                    disabled={\n                      inputETH === 0 ||\n                      inputETH > formatEther(ethBalance.value) ||\n                      ethToTokenTransferInputTxLoading\n                    }\n                    onClick={() => {\n                      ethToTokenTransferInput()\n                    }}\n                  >\n                    {formatBtnActionName(router)}\n                  </button>\n                ))\n              )\n            ) : (\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            )\n          ) : (\n            <ConnectorButton customText=\"\u8ACB\u5148\u9023\u63A5\u9322\u5305\" />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n", "const MyToken = [\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name_',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'symbol_',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'subtractedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'decreaseAllowance',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'addedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'increaseAllowance',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]\n\nexport default MyToken\n", "const MyExchange = [\n  {\n    inputs: [\n      {\n        internalType: 'contract IERC20',\n        name: '_token',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'minLiquidity',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'maxTokens',\n        type: 'uint256',\n      },\n    ],\n    name: 'addLiquidity',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'subtractedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'decreaseAllowance',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'minTokens',\n        type: 'uint256',\n      },\n    ],\n    name: 'ethToTokenTransferInput',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'addedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'increaseAllowance',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'minETH',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'minTokens',\n        type: 'uint256',\n      },\n    ],\n    name: 'removeLiquidity',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'token',\n    outputs: [\n      {\n        internalType: 'contract IERC20',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]\n\nexport default MyExchange\n", "import { useContractRead, useContractWrite } from 'wagmi'\n\nexport function readContract({ contract, method, abi, provider, args }) {\n  return useContractRead(\n    {\n      addressOrName: contract,\n      contractInterface: abi,\n      signerOrProvider: provider,\n    },\n    method,\n    {\n      args,\n    }\n  )\n}\n\nexport function writeContract({\n  contract,\n  method,\n  abi,\n  provider,\n  args,\n  overrides,\n}) {\n  return useContractWrite(\n    {\n      addressOrName: contract,\n      contractInterface: abi,\n      signerOrProvider: provider,\n    },\n    method,\n    {\n      args,\n      overrides,\n    }\n  )\n}\n", "export default {'version':'68bf8da2','entry':{'module':'/build/entry.client-TRTV5YSP.js','imports':['/build/_shared/chunk-TV3IXRZX.js','/build/_shared/chunk-ZLEJCLKR.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-QSO7MPN3.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-2MUSAKYA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-68BF8DA2.js'};", "\nimport * as entryServer from \"/Users/whien/Workspace/krypto-camp/week3/MyExchange/app/entry.server.jsx\";\nimport * as route0 from \"/Users/whien/Workspace/krypto-camp/week3/MyExchange/app/root.jsx\";\nimport * as route1 from \"/Users/whien/Workspace/krypto-camp/week3/MyExchange/app/routes/index.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AAAA,mBAA4B;AAC5B,oBAA+B;AAC/B,mBAAyB;AAEV,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,uBAAD,MACE,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAIrD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;ACpBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB;AACrB,oBAQO;AAEA,IAAM,OAAO,MAAO;AAAA,EACzB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGL,IAAM,QAAQ,MAAM;AACzB,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAKZ,wBAA+B;AAC7B,SAAO,sBAAK;AAAA,IACV,KAAK;AAAA,MACH,wBAAwB,QAAQ,IAAI;AAAA,MACpC,2BAA2B,QAAQ,IAAI;AAAA,MACvC,WAAW,QAAQ,IAAI;AAAA;AAAA;AAAA;AAKd,eAAe;AAC5B,QAAM,OAAO;AACb,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,UAAD;AAAA,IACE,yBAAyB;AAAA,MACvB,QAAQ,gBAAgB,KAAK,UAAU,KAAK;AAAA;AAAA,MAGhD,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;ACzDR;AAAA;AAAA;AAAA;AAAA,oBAAyB;;;ACAzB,oBAA2B;;;ACA3B,oBAA2B;AAEZ,yBAAyB,EAAE,cAAc;AACtD,QAAM,CAAC,EAAE,MAAM,eAAe,WAAW,8BAAW,EAAE,UAAU;AAEhE,SAAO,YAAY,WAAW,IAAI,CAAC,cACjC,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK,UAAU;AAAA,IACf,SAAS,MAAM,QAAQ;AAAA,KAEtB,cAAc;AAAA;;;ADRN,gBAAgB,EAAE,aAAa;AAC5C,QAAM,CAAC,EAAE,MAAM,eAAe,cAAc;AAC5C,SACE,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,YAAY;AAAA;AAAA,KAGd,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,SAAS;AAAA,MACT,KAAK;AAAA;AAAA,KAGP,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,QAAQ;AAAA,KAAa,qBACnC,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,QAAQ;AAAA,IAAa,SAAS,MAAM,UAAU;AAAA,KAAU,6BAGtE,oCAAC,OAAD;AAAA,IACE,OAAO,EAAE,QAAQ;AAAA,IACjB,SAAS,MAAM,UAAU;AAAA,KAC1B,mCAGD,oCAAC,OAAD;AAAA,IACE,OAAO,EAAE,QAAQ;AAAA,IACjB,SAAS,MAAM,UAAU;AAAA,KAC1B,oCAIH,oCAAC,OAAD,MACG,4CAAa,WACZ,oCAAC,OAAD;AAAA,IACE,OAAO,EAAE,QAAQ;AAAA,IACjB,KAAK,YAAY;AAAA,IACjB,SAAS;AAAA,KAER,YAAY,MAAM,YAAY,IAAI,OAAO,YAAY,WAGxD,oCAAC,iBAAD;AAAA;;;AEjDV,oBAAoC;AACpC,oBAKO;AACP,oBAAsB;;;ACPtB,IAAM,UAAU;AAAA,EACd;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,MAAM;AAAA;AAAA,EAER;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA;AAIV,IAAO,kBAAQ;;;ACjSf,IAAM,aAAa;AAAA,EACjB;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,MAAM;AAAA;AAAA,EAER;AAAA,IACE,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,SAAS;AAAA,QACT,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA,EAER;AAAA,IACE,QAAQ;AAAA,MACN;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAAA,IAGV,iBAAiB;AAAA,IACjB,MAAM;AAAA;AAAA;AAIV,IAAO,qBAAQ;;;ACtXf,oBAAkD;AAE3C,sBAAsB,EAAE,UAAU,QAAQ,KAAK,UAAU,QAAQ;AACtE,SAAO,mCACL;AAAA,IACE,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,KAEpB,QACA;AAAA,IACE;AAAA;AAAA;AAKC,uBAAuB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACC;AACD,SAAO,oCACL;AAAA,IACE,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,KAEpB,QACA;AAAA,IACE;AAAA,IACA;AAAA;AAAA;;;AHlBN,IAAM,cAAc,CAAC,WAAW,oBAAM,YAAY;AAClD,IAAM,aAAa,CAAC,WAAW,oBAAM,WAAW;AAChD,IAAM,mBAAmB,CAAC,WAAW;AACnC,UAAQ;AAAA,SACD;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA;AAAA;AAGb,IAAM,sBAAsB,CAAC,WAAW;AACtC,UAAQ;AAAA,SACD;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA;AAAA;AAIE,iBAAiB,EAAE,UAAU;AAC1C,QAAM,WAAW;AACjB,QAAM,CAAC,UAAU,eAAe,4BAAS;AACzC,QAAM,CAAC,YAAY,iBAAiB,4BAAS;AAC7C,QAAM,CAAC,EAAE,MAAM,iBAAiB;AAChC,QAAM,CAAC,EAAE,MAAM,gBAAgB,8BAAW;AAAA,IACxC,eAAe,2CAAa;AAAA;AAG9B,QAAM,CAAC,EAAE,MAAM,WAAW,eAAe,aAAa;AAAA,IACpD,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM,2CAAa;AAAA;AAGrB,QAAM,CAAC,EAAE,MAAM,aAAa,iBAAiB,aAAa;AAAA,IACxD,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM,2CAAa;AAAA;AAGrB,QAAM,CAAC,EAAE,MAAM,qBAAqB,yBAAyB,aAAa;AAAA,IACxE,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM,OAAO,IAAI;AAAA;AAGnB,QAAM,CAAC,EAAE,MAAM,YAAY,aAAa;AAAA,IACtC,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA;AAGP,QAAM,CAAC,EAAE,MAAM,aAAa,iBAAiB,aAAa;AAAA,IACxD,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM,CAAC,2CAAa,SAAS,OAAO,IAAI;AAAA;AAO1C,QAAM,CAAC,EAAE,MAAM,uBAAuB,gBAAgB,cAAc;AAAA,IAClE,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,MACJ,OAAO,IAAI;AAAA,MACX,aAAa,WAAW,WAAW,cAAc;AAAA;AAAA;AAQrD,QAAM,CAAC,EAAE,MAAM,0BAA0B,gBAAgB,cAAc;AAAA,IACrE,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,MACJ,WAAW,WAAW,SAAS,cAAc;AAAA,MAC7C,aAAa,WAAW,WAAW,cAAc;AAAA;AAAA,IAEnD,WAAW;AAAA,MACT,OAAO,WAAW,WAAW,SAAS,cAAc;AAAA;AAAA;AAIxD,QAAM,CAAC,EAAE,MAAM,6BAA6B,mBAAmB,cAAc;AAAA,IAC3E,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM,CAAC,YAAY,YAAY,GAAG,GAAG;AAAA;AAGvC,QAAM,CAAC,EAAE,MAAM,qCAAqC,2BAClD,cAAc;AAAA,IACZ,UAAU,OAAO,IAAI;AAAA,IACrB,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM,CAAC;AAAA,IACP,WAAW;AAAA,MACT,OAAO,WAAW,WAAW,SAAS,cAAc;AAAA;AAAA;AAI1D,QAAM,CAAC,EAAE,SAAS,2BAA2B,yCAAsB;AAAA,IACjE,MAAM,iEAAwB;AAAA;AAGhC,QAAM,CAAC,EAAE,SAAS,8BAA8B,yCAAsB;AAAA,IACpE,MAAM,uEAA2B;AAAA;AAGnC,QAAM,CAAC,EAAE,SAAS,sCAAsC,yCACtD;AAAA,IACE,MAAM,uFAAmC;AAAA;AAI7C,QAAM,CAAC,EAAE,MAAM,iBAAiB,SAAS,wBACvC,yCAAsB;AAAA,IACpB,MAAM,2DAAqB;AAAA;AAG/B,+BAAU,MAAM;AACd,QAAI;AAAoB;AACxB;AACA;AACA;AACA;AAAA,KACC,CAAC,2CAAa,SAAS;AAE1B,SACE,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,SAAS;AAAA,MACT,SAAS;AAAA,MACT,gBAAgB;AAAA;AAAA,KAGlB,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,SAAS;AAAA;AAAA,KAGX,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,WAAW;AAAA,KAAa,iBAAiB,UACvD,oCAAC,MAAD,OACA,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,SAAS;AAAA,MACT,eAAe;AAAA,MACf,YAAY;AAAA;AAAA,KAGb,WAAW,kBACV,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,IAAmB,IAAG;AAAA,KACpC,oCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,KAAI;AAAA,OAGR,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAU,CAAC,MAAM,YAAY,OAAO,EAAE,OAAO;AAAA,MAE/C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,aACG,OAAO,YAAY,WAAW,QAAQ,QAAQ,KAC9C,SAGR,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,IAAmB,IAAG;AAAA,KACnC,SAEH,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAU,CAAC,MAAM,cAAc,OAAO,EAAE,OAAO;AAAA,MAEjD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,UAAU,YAAY,WAAW,QAEpC,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,YAAY,YAAY,aAAa,QAExC,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,YAAY,YAAY,aAAa,WAI1C,MAEH,WAAW,qBACV,oCAAC,OAAD,MACE,oCAAC,OAAD,MAAK,qDACO,YAAY,YAAY,aAAa,QAEjD,oCAAC,MAAD,SAEA,MAEH,WAAW,UACV,oCAAC,OAAD,MACE,oCAAC,OAAD,MAAK,sBACC,QAAO,iBAAI,KACd,oBAAoB,YAAY,qBAAqB,IAExD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,IAAmB,IAAG;AAAA,KACpC,oCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,KAAI;AAAA,OAGR,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,UAAU,CAAC,MAAM,YAAY,OAAO,EAAE,OAAO;AAAA,MAE/C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,aACG,OAAO,YAAY,WAAW,QAAQ,QAAQ,KAC9C,WAIR,MACH,cACC,YACE,OAAO,YAAY,gBAAgB,KACnC,WAAW,kBACT,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,UACE,eAAe,KACf,aAAa,YAAY,YACzB;AAAA,IAEF,SAAS,MAAM;AAAA,KAEd,qBAAqB,0BAAW,gBAAM,yBAGxC,WAAW,mBACV,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,UACE,aAAa,KACb,WAAW,YAAY,WAAW,UAClC,eAAe,KACf,aAAa,YAAY,YACzB;AAAA,IAEF,SAAS,MAAM;AACb;AAAA;AAAA,KAGD,oBAAoB,YAGxB,WAAW,sBACV,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,UACE,OAAO,YAAY,gBAAgB,KACnC;AAAA,IAEF,SAAS,MAAM;AACb;AAAA;AAAA,KAGD,oBAAoB,YAGxB,WAAW,WACV,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,UACE,aAAa,KACb,WAAW,YAAY,WAAW,UAClC;AAAA,IAEF,SAAS,MAAM;AACb;AAAA;AAAA,KAGD,oBAAoB,WAK3B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAiB,MAAK;AAAA,KACnC,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAkB,iBAItC,oCAAC,iBAAD;AAAA,IAAiB,YAAW;AAAA;AAAA;;;AH7UzB,iBAAiB;AAC9B,QAAM,CAAC,QAAQ,aAAa,4BAAS;AAIrC,QAAM,CAAC,SAAS,cAAc,MAAM,SAAS;AAC7C,QAAM,UAAU,MAAM;AACpB,eAAW;AAAA,KACV;AACH,MAAI,CAAC;AAAS,WAAO;AAErB,SACE,oCAAC,OAAD,MACE,oCAAC,QAAD;AAAA,IAAQ;AAAA,MACR,oCAAC,SAAD;AAAA,IAAS;AAAA;AAAA;;;AOlBf,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACKvsB,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
